"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var extBase = require("./default");
var publishUtils = require("./_lib/publish");
function getCommand(args) {
    return new ExtensionShow(args);
}
exports.getCommand = getCommand;
var ExtensionShow = (function (_super) {
    __extends(ExtensionShow, _super);
    function ExtensionShow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.description = "Show info about a published Visual Studio Services Extension.";
        _this.serverCommand = true;
        return _this;
    }
    ExtensionShow.prototype.getHelpArgs = function () {
        return ["publisher", "extensionId", "vsix"];
    };
    ExtensionShow.prototype.exec = function () {
        var galleryApi = this.webApi.getGalleryApi(this.webApi.serverUrl);
        return this.identifyExtension().then(function (extInfo) {
            var sharingMgr = new publishUtils.SharingManager({}, galleryApi, extInfo);
            return sharingMgr.getExtensionInfo();
        });
    };
    return ExtensionShow;
}(extBase.ExtensionBase));
exports.ExtensionShow = ExtensionShow;
//# sourceMappingURL=show.js.map